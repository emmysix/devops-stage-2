version: '3.8'

services:
  backend:
    env_file: './backend/.env'
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DOMAIN=localhost
      - ENVIRONMENT=local
      - PROJECT_NAME=Full Stack FastAPI Project
      - STACK_NAME=full-stack-fastapi-project
      - BACKEND_CORS_ORIGINS=http://localhost,http://localhost:5173,https://localhost,https://localhost:5173
      - SECRET_KEY=changethis123
      - FIRST_SUPERUSER=devops@hng.tech
      - FIRST_SUPERUSER_PASSWORD=devops#HNG11
      - USERS_OPEN_REGISTRATION=True
      - SMTP_HOST=
      - SMTP_USER=
      - SMTP_PASSWORD=
      - EMAILS_FROM_EMAIL=info@example.com
      - SMTP_TLS=True
      - SMTP_SSL=False
      - SMTP_PORT=587
      - POSTGRES_SERVER=dpg-cq45nto8fa8c73fl4cj0-a.oregon-postgres.render.com
      - POSTGRES_DB=hng_devops_2
      - POSTGRES_USER=alexin
      - POSTGRES_PASSWORD=6UGnRF3MqLZ9P9fP1NqydV33VczsYKLG
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file: './frontend/.env'

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #     - frontend

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '8090:81' # Admin Web Port

    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt


  db:
    image: postgres:16
    environment:
      POSTGRES_DB: dpg-cq45nto8fa8c73fl4cj0-a.oregon-postgres.render.com
      POSTGRES_USER: alexin
      POSTGRES_PASSWORD: 6UGnRF3MqLZ9P9fP1NqydV33VczsYKLG
    volumes:
      - db_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  db_data:
